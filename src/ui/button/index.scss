@use '../utils' as *;

$colors: primary, danger,secondary,warning,success;
$variants: bordered,light,flat,ghost,shadow;
$sizes: sm,lg;

.btn_ {

  --btn-background: theme("colors.default");
  --btn-light-color: theme("colors.default-800");
  --btn-hover-bg: theme("colors.default-300");
  --btn-color: theme("colors.default-800");
  --btn-hover-color: theme("colors.default-800");

  --btn-height: theme("height.10");
  --btn-font-size: theme("fontSize.small");
  --btn-radius: theme("borderRadius.medium");

  --btn-badge-size: 1.5em;
  background: var(--btn-background);
  color: var(--btn-color);
  height: var(--btn-height);
  font-size: var(--btn-font-size);
  border-radius: var(--btn-radius);
  @apply px-4  inline-flex select-none items-center justify-center transition-all cursor-pointer appearance-none relative whitespace-nowrap;

  &:disabled, &.btn_disabled {
    @apply pointer-events-none opacity-60;
  }

  &:hover {
    @apply opacity-hover;
  }

  &.btn_icon{
    width: var(--btn-height);
    @apply p-0;
  }
  &.btn_ti{
    @apply gap-2;
    svg{
      @apply w-4 h-4;
    }
  }
  &.btn_full{
    @apply flex w-full;
  }

  @each $color in $colors {
    &.btn_#{$color} {

      --btn-background: #{'theme("colors.#{$color}")'};
      --btn-light-color: #{'theme("colors.#{$color}")'};
      --btn-hover-bg: hsl(var(--nexlink-#{$color}) / .2);
      --btn-color:  #{'theme("colors.#{$color}-foreground")'};
      --btn-hover-color: theme("colors.white");
      @apply shadow-#{$color}/40;
    }
  }
  @each $variant in $variants {
    &.btn_#{$variant} {
      @if $variant == "bordered" {
        border-color: var(--btn-background);
        color: var(--btn-background);
        background-color: transparent;
        @apply border-medium;
      } @else if $variant == "light" {
        color: var(--btn-light-color);
        background-color: transparent;
        &:hover{
          background-color: var(--btn-hover-bg);
        }
      }@else if $variant == "flat" {
        color: var(--btn-background);
        background-color: var(--btn-hover-bg);
      }@else if $variant == "ghost" {
        border-color: var(--btn-background);
        color: var(--btn-background);
        background-color: transparent;
        &:hover{
          background-color: var(--btn-background);
          color: var(--btn-color);
        }
        @apply border-medium;
      }@else if $variant == "shadow" {
        @apply shadow-lg shadow-content1;
      }
    }
  }
  @each $size in $sizes {
    &.btn_#{$size} {
      @if $size == "sm" {
        --btn-radius: theme("borderRadius.small");
        --btn-height: theme("height.8");
        --btn-font-size: theme("fontSize.tiny");
        @apply px-3;
      }@else if $size == "lg" {
        --btn-radius: theme("borderRadius.large");
        --btn-height: theme("height.12");
        --btn-font-size: theme("fontSize.medium");
        @apply px-6;
      }
    }
  }
  @include set-component-styles("btn_rounded");


}

